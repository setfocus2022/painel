
  const handleSave = () => {
    axios.put(`https://fair-ruby-caterpillar-wig.cyclic.app/cadastro_clientes/${editData.id}`, editData)
      .then(response => {
        console.log(response.data);
        setEditIndex(-1);
        carregarUsuarios();
      })
      .catch(error => {
        console.log(error);
      });
  };

  const handleDelete = (id) => {
    axios.delete(`https://fair-ruby-caterpillar-wig.cyclic.app/usuarios/${id}`)
      .then(response => {
        console.log(response.data);
        carregarUsuarios();
      })
      .catch(error => {
        console.log(error);
      });
  };

  const handleCancel = () => {
    setEditIndex(-1);
    setEditData({});
  };

  const handleChange = (e, field) => {
    const { value } = e.target;
    setEditData(prevData => ({
      ...prevData,
      [field]: value
    }));
  };

  const handleUserSelection = (index) => {
    setSelectedUser(index);
  };

  return (
    <Container fluid>
      <h1>Administração de Usuários para {localStorage.getItem('instituicaoNome')}</h1>
      <p>Selecione o Usuário na tabela abaixo e vejas suas informações com opções de edição.</p>
      <Table responsive bordered className="user-selection-table mb-4">
        <thead>
          <tr>
            <th>Selecione um Usuário:</th>
          </tr>
        </thead>
        <tbody>
          {currentItems.map((usuario, index) => (
            <tr key={index} onClick={() => handleUserSelection(indexOfFirstItem + index)} className="clickable-row">
              <td>{usuario.name}</td>
            </tr>
          ))}
        </tbody>
      </Table>
      <div className="pagination-wrapper">
        <Pagination>
          {[...Array(totalPages).keys()].map(page => (
            <Pagination.Item key={page + 1} active={page + 1 === currentPage} onClick={() => setCurrentPage(page + 1)}>
              {page + 1}
            </Pagination.Item>
          ))}
        </Pagination>