= 'INSERT INTO pagamentos (id, email, cursos, valor) VALUES (?, ?, ?, ?)';
  
  // Execute a query
  db.query(query, [id, email, cursos, valor], (err, result) => {
    if (err) {
      console.log(err);
      return res.status(500).send({ success: false, message: err.message });
    }
    res.send({ success: true });
  });
});


mercadopago.configure({
  access_token: 'TEST-2684905602430236-052513-51d07b1caa42a7938ab7e2a9f13a7f98-135153905',
});

app.post('/create_preference', async (req, res) => {
  const { title, price, quantity } = req.body;

  const preference = {
    items: [
      {
        title,
        unit_price: Number(price),
        quantity: Number(quantity),
      },
    ],
  };

  try {
    const response = await mercadopago.preferences.create(preference); // Correção aqui
    res.json({ id: response.body.id });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

app.post('/webhook', async (req, res) => {
  console.log("Received a webhook event", req.body);  

  const event = req.body;

  if (event.action === "payment.created") {
    try {
      // Fetch payment details from Mercado Pago API
      const payment = await mercadopago.payment.findById(event.data.id);

      // Check if payment and payer exist and the payment is approved
      if (payment.body && payment.body.payer && payment.body.status === 'approved') {
        const email = payment.body.payer.email;
        const sessionId = payment.body.id;
        const courses = payment.body.additional_info.items;
        const amount = payment.body.transaction_amount;

        console.log("Saving checkout data", {sessionId, email, courses, amount});  

        const query = 'INSERT INTO checkout (session_id, email, cursos, valor) VALUES (?, ?, ?, ?)';
        db.query(query, [sessionId, email, JSON.stringify(courses), amount], (err, result) => {
          if (err) {
              console.error('Error inserting 